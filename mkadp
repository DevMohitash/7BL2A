#!/system/bin/sh
#=======================================#
#VARIABLES===============================#
BB=/data/adb/magisk/busybox
CLOG=/data/media/0/YourBLchanges.log
BRANCH="Balanced-Profile"
#=======================================#
#=======================================#

kmsg3() {
	echo -e "[*] $@" >> $CLOG
}

#am start -a android.intent.action.MAIN -e toasttext "Enabling ButterLimits-Balanced. This can take upto 5 minutes" -n mkadp.toast/.MainActivity

#am start -a android.intent.action.MAIN -e toasttext "Preparing..." -n mkadp.toast/.MainActivity

$BB cp -rf /data/adb/modules/butterlimitsforop7poos11uni/system/etc/mkadp/module.prop /data/adb/modules/butterlimitsforop7poos11uni

#$BB cp -rf /data/adb/modules/butterlimitsforop7poos11uni/system/etc/mkadp/gms/system/etc/sysconfig/power_profile_com.google.android.gm.xml /data/adb/modules/butterlimitsforop7poos11uni/system/etc/sysconfig/power_profile_com.google.android.gm.xml
#$BB cp -rf /data/adb/modules/butterlimitsforop7poos11uni/system/etc/mkadp/gms/system/product/etc/sysconfig/google.xml /data/adb/modules/butterlimitsforop7poos11uni/system/product/etc/sysconfig/google.xml

#am start -a android.intent.action.MAIN -e toasttext "Setting Variables" -n mkadp.toast/.MainActivity

#=======================================#
#VARIABLES==============================#
NEWLOG2=/data/media/0/.mkadp.log
LOGFU=/data/media/0/butterlimits.log
#=======================================#
LOGBL1=/data/media/0/.mkadp.log
LOGBL2=/data/media/0/butterlimits.log
LOG2=/data/data/com.mkadp.blapptwo/files/butterlimits.log
FRACTION=75
RAM=$(free -m | awk '/Mem:/{print $2}')
CPUS=`grep -c processor /proc/cpuinfo`
SIZE=$(((RAM * FRACTION / 100) * 1048576))
#=======================================#
#=======================================#

#am start -a android.intent.action.MAIN -e toasttext "Removing old Logs" -n mkadp.toast/.MainActivity

rm $NEWLOG2
rm $LOGFU
rm -rf $LOGBL1
rm -rf $LOGBL2
rm -rf $LOG2

#am start -a android.intent.action.MAIN -e toasttext "Prepring for heavy works" -n mkadp.toast/.MainActivity

kmsg() {
	echo -e "[*] $@" >> $LOGBL1
}

#kmsg2() {
#	echo -e "[*] $@" >> $LOG2
#}

# Safely write value to file
_ctl() {
	# Bail out if file does not exist
	[[ ! -f "$1" ]] && return 1
	
	chmod +w "$1" 2> /dev/null

	# Fetch the current key value
	local curval=`cat "$1" 2> /dev/null`

	# Bail out if value is already set
	[[ "$curval" == "$2" ]] && return 0

	# Write the new value
	echo "$2" > "$1" 2> /dev/null

	# Bail out if ctl fails
	if [[ $? -ne 0 ]]
	then
		err "Failed to ctl $2 to $1.Skipping."
		return 1
	fi

	kmsg "$1: $curval => $2"
}

# Background fork ctl function
ctl() {
	_ctl $@
}

# Print device information prior to execution
#kmsg2 $(date) 
#kmsg2 "ButterLimits Mode"
#kmsg2 "Verson 8.0"
#kmsg2 "----"

#am start -a android.intent.action.MAIN -e toasttext "Killing some idle servers" -n mkadp.toast/.MainActivity

#kmsg2 "Killing some idle servers to save battery"
#kmsg2 "----"
# Kill all three to save battery
pm enable com.android.providers.media/com.android.providers.media.MediaScannerReceiver
killall -9 com.google.android.gms
killall -9 android.process.media
killall -9 mediaserver

#kmsg $(date) 
#kmsg "Killing some servers done"
#kmsg "----"

#am start -a android.intent.action.MAIN -e toasttext "Applying UGMS Doze" -n mkadp.toast/.MainActivity

#kmsg2 "UGMS Doze on the go..."
#kmsg2 "----"

# GMS Doze

cmd appops set com.google.android.gms BOOT_COMPLETED allow
cmd appops set com.google.android.ims BOOT_COMPLETED allow
cmd appops set com.google.android.gsf WAKE_LOCK allow
cmd appops set com.google.android.gms AUTO_START allow
cmd appops set com.google.android.ims AUTO_START allow
cmd appops set com.google.android.ims WAKE_LOCK allow

pm enable com.google.android.gms/com.google.android.gms.mdm.receivers.MdmDeviceAdminReceiver
pm enable com.google.android.gms/com.google.android.gms.auth.managed.admin.DeviceAdminReceiver
pm enable com.google.android.gms/com.google.android.gms.auth.setup.devicesignals.LockScreenService
pm enable com.google.android.gms/com.google.android.gms.mdm.receivers.MdmDeviceAdminReceiver

#am start -a android.intent.action.MAIN -e toasttext "Applying some more Doze" -n mkadp.toast/.MainActivity

#kmsg2 "More Doze on the go..."
#kmsg2 "----"

#if [ "$(pidof com.google.android.gms | wc -l)" -eq "1" ]; then
#	kill $(pidof com.google.android.gms);
#fi;
#if [ "$(pidof com.google.android.gms.unstable | wc -l)" -eq "1" ]; then
#	kill $(pidof com.google.android.gms.unstable);
#fi;
#if [ "$(pidof com.google.android.gms.persistent | wc -l)" -eq "1" ]; then
#	kill $(pidof com.google.android.gms.persistent);
#fi;
#if [ "$(pidof com.google.android.gms.wearable | wc -l)" -eq "1" ]; then
#	kill $(pidof com.google.android.gms.wearable);
#fi;

pm enable --user 0 com.google.android.gms/.phenotype.service.sync.PhenotypeConfigurator;
pm enable com.google.android.gms/.common.config.PhenotypeCheckinService

#am start -a android.intent.action.MAIN -e toasttext "Blocking some GMS Stuffs" -n mkadp.toast/.MainActivity

kmsg2 "Blocking some GMS....."
kmsg2 "----"

#GMS Blocker
pm enable com.google.android.location.internal.UPLOAD_ANALYTICS
pm enable com.google.android.apps.wellbeing/.powerstate.impl.PowerStateJobService
pm enable com.google.android.apps.wellbeing/androidx.work.impl.background.systemjob.SystemJobService
pm enable com.facebook.katana/com.facebook.analytics.appstatelogger.AppStateIntentService
pm enable com.facebook.orca/com.facebook.analytics.apptatelogger.AppStateIntentService
pm enable com.facebook.orca/com.facebook.analytics2.Logger.LollipopUploadService
pm enable com.google.android.gms/com.google.android.gms.nearby.bootstrap.service.NearbyBootstrapService
pm enable com.google.android.gms/NearbyMessagesService
pm enable com.google.android.gms/com.google.android.gms.nearby.connection.service.NearbyConnectionsAndroidService
pm enable com.google.android.gms/com.google.location.nearby.direct.service.NearbyDirectService
pm enable com.google.android.gms/com.google.android.gms.lockbox.LockboxService
pm enable com.google.android.gms/.measurement.PackageMeasurementTaskService
pm enable com.google.android.gms/com.google.android.gms.auth.trustagent.GoogleTrustAgent

#am start -a android.intent.action.MAIN -e toasttext "Some Battery Tweaks" -n mkadp.toast/.MainActivity

#kmsg $(date) 
#kmsg "GMS doze done"
#kmsg "----"

pm enable --user 0 com.google.android.gms/.phenotype.service.sync.PhenotypeConfigurator;
pm enable com.google.android.gms/.common.config.PhenotypeCheckinService

pm enable 'com.google.android.gsf/.update.SystemUpdateService'
pm enable 'com.android.vending/com.google.android.gms.measurement.AppMeasurementReceiver'
pm enable 'com.google.android.gms/.update.SystemUpdateActivity'
pm enable 'com.google.android.gms/.update.SystemUpdateService$ActiveReceiver'
pm enable 'com.google.android.gms/.update.SystemUpdateService$Receiver'
pm enable 'com.google.android.gms/.update.SystemUpdateService$SecretCodeReceiver'
pm enable 'com.google.android.gms/com.google.android.gms.analytics.AnalyticsReceiver'
pm enable 'com.google.android.gms/com.google.android.gms.measurement.AppMeasurementInstallReferrerReceiver'
pm enable 'com.google.android.gms/com.google.android.gms.measurement.AppMeasurementReceiver'
pm enable 'com.google.android.gms/com.google.android.gms.measurement.AppMeasurementService'
pm enable 'com.google.android.gms/com.google.android.gms.measurement.PackageMeasurementReceiver'
pm enable 'com.google.android.gms/com.google.android.gms.measurement.PackageMeasurementService'
pm enable 'com.google.android.gms/com.google.android.gms.measurement.service.MeasurementBrokerService'
pm enable 'com.google.android.gms/com.google.android.location.internal.AnalyticsSamplerReceiver'
pm enable 'com.google.android.gsf/.update.SystemUpdateActivity'
pm enable 'com.google.android.gsf/.update.SystemUpdatePanoActivity'
pm enable 'com.google.android.gsf/.update.SystemUpdateService$Receiver'
pm enable 'com.google.android.gsf/.update.SystemUpdateService$SecretCodeReceiver'

#am start -a android.intent.action.MAIN -e toasttext "Some eXtra Doze for Battery" -n mkadp.toast/.MainActivity

#kmsg2 "Applying some Battery Life Doze..."
#kmsg2 "----"

# Doze battery life;
#settings delete global device_idle_constants;
#settings put global device_idle_constants inactive_to=60000,sensing_to=0,locating_to=0,location_accuracy=2000,motion_inactive_to=0,idle_after_inactive_to=0,idle_pending_to=60000,max_idle_pending_to=120000,idle_pending_factor=2.0,idle_to=900000,max_idle_to=21600000,idle_factor=2.0,max_temp_app_whitelist_duration=60000,mms_temp_app_whitelist_duration=30000,sms_temp_app_whitelist_duration=20000,light_after_inactive_to=10000,light_pre_idle_to=60000,light_idle_to=180000,light_idle_factor=2.0,light_max_idle_to=900000,light_idle_maintenance_min_budget=30000,light_idle_maintenance_max_budget=60000;
#dumpsys deviceidle step deep doze;

#kmsg $(date) 
#kmsg "Some extra doze done"
#kmsg "----"

#kmsg $(date) 
#kmsg "Kernel and CPU Level Tweaks Started"
#kmsg "----"

#kmsg2 $(date) 
#kmsg2 "Kernel and CPU Level Tweaks"
#kmsg2 "----"
#kmsg2 "Logs for these will go in"
#kmsg2 "hlevel log file with details....."
#kmsg2 "----"
#kmsg2 "Now applying..."
#kmsg2 "----"

#am start -a android.intent.action.MAIN -e toasttext "Starting applying of Kerne/CPU/GPU Level Tweaks" -n mkadp.toast/.MainActivity

# Custom CPUSet
ctl /dev/cpuset/background/cpus 5
ctl /dev/cpuset/camera-daemon/cpus "1,7"
ctl /dev/cpuset/foreground/cpus 0-1
ctl /dev/cpuset/kernel/cpus 6
ctl /dev/cpuset/restricted/cpus 6-7
ctl /dev/cpuset/system-background/cpus 5-6
ctl /dev/cpuset/top-app/cpu 0-7

# Force all CPUs Governor to schedutil
ctl /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor schedutil
ctl /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor schedutil
ctl /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor schedutil
ctl /sys/devices/system/cpu/cpu3/cpufreq/scaling_governor schedutil
ctl /sys/devices/system/cpu/cpu4/cpufreq/scaling_governor schedutil
ctl /sys/devices/system/cpu/cpu5/cpufreq/scaling_governor schedutil
ctl /sys/devices/system/cpu/cpu6/cpufreq/scaling_governor schedutil
ctl /sys/devices/system/cpu/cpu7/cpufreq/scaling_governor schedutil

# Fequency tweaks to all CPUs
ctl /sys/devices/system/cpu/cpu0/cpufreq/schedutil/down_rate_limit_us 0
ctl /sys/devices/system/cpu/cpu0/cpufreq/schedutil/up_rate_limit_us 2000
ctl /sys/devices/system/cpu/cpu0/cpufreq/schedutil/pl 0

ctl /sys/devices/system/cpu/cpu1/cpufreq/schedutil/down_rate_limit_us 0
ctl /sys/devices/system/cpu/cpu1/cpufreq/schedutil/up_rate_limit_us 2000
ctl /sys/devices/system/cpu/cpu1/cpufreq/schedutil/pl 0

ctl /sys/devices/system/cpu/cpu2/cpufreq/schedutil/down_rate_limit_us 0
ctl /sys/devices/system/cpu/cpu2/cpufreq/schedutil/up_rate_limit_us 2000
ctl /sys/devices/system/cpu/cpu2/cpufreq/schedutil/pl 0

ctl /sys/devices/system/cpu/cpu3/cpufreq/schedutil/down_rate_limit_us 0
ctl /sys/devices/system/cpu/cpu3/cpufreq/schedutil/up_rate_limit_us 2000
ctl /sys/devices/system/cpu/cpu3/cpufreq/schedutil/pl 0

ctl /sys/devices/system/cpu/cpu4/cpufreq/schedutil/down_rate_limit_us 0
ctl /sys/devices/system/cpu/cpu4/cpufreq/schedutil/up_rate_limit_us 2000
ctl /sys/devices/system/cpu/cpu4/cpufreq/schedutil/pl 0

ctl /sys/devices/system/cpu/cpu5/cpufreq/schedutil/down_rate_limit_us 0
ctl /sys/devices/system/cpu/cpu5/cpufreq/schedutil/up_rate_limit_us 2000
ctl /sys/devices/system/cpu/cpu5/cpufreq/schedutil/pl 0

ctl /sys/devices/system/cpu/cpu6/cpufreq/schedutil/down_rate_limit_us 0
ctl /sys/devices/system/cpu/cpu6/cpufreq/schedutil/up_rate_limit_us 2000
ctl /sys/devices/system/cpu/cpu6/cpufreq/schedutil/pl 0

ctl /sys/devices/system/cpu/cpu7/cpufreq/schedutil/down_rate_limit_us 0
ctl /sys/devices/system/cpu/cpu7/cpufreq/schedutil/up_rate_limit_us 2000
ctl /sys/devices/system/cpu/cpu7/cpufreq/schedutil/pl 0

# Other CPU tweaks
ctl /dev/cpuctl/cpu.shares 1024



#am start -a android.intent.action.MAIN -e toasttext "Finally...Kernel/CPU/GPU Tweaks Applied" -n mkadp.toast/.MainActivity

#kmsg2 $(date) 
#kmsg2 "Applied..."
#kmsg2 "----"

#kmsg2 "Some other heavy works started..."
#kmsg2 "----"

#am start -a android.intent.action.MAIN -e toasttext "Some Launchers/Apps Optimisations" -n mkadp.toast/.MainActivity

#AddonOn62x1
list="com.android.systemui com.google.android.launcher org.lineageos.trebuchet com.google.android.apps.plus com.deletescape.launchair com.android.launcher3 com.actionlauncher.playstore com.yandex.launcher com.google.android.apps.nexuslauncher com.miui9launcher.miuithemes com.huawei.android.launcher com.miui.home com.cma.launcher.lite com.jiubang.go.mini.launcher com.kkmlauncher-1 com.uprui.launcher.marshmallow com.android.launcher org.adw.launcher org.adwfreak.launcher net.alamoapps.launcher com.anddoes.launcher com.android.lmt com.chrislacy.actionlauncher.pro com.cyanogenmod.trebuchet com.gau.go.launcherex com.gtp.nextlauncher com.miui.mihome2 com.mobint.hololauncher com.mobint.hololauncher.hd com.qihoo360.launcher com.teslacoilsw.launcher com.tsf.shell org.zeam com.sonyericsson.home com.xperiaZ5.home com.sonymobile.simplehome com.teslacoilsw.launcher.prime com.miui.home com.anddoes.launcher.pro-1 com.anddoes.launcher-2 com.actionlauncher.playstore com.lge.launcher2 com.sec.android.app.launcher com.sec.android.app.twlauncher com.gtp.nextlauncher com.cyanogenport.trebuchet net.oneplus.launcher com.whatsapp org.thunderdog.challegram"

renice -n 0 $(pgrep zygote) 2>/dev/null
renice -n -20 $(pgrep kswapd0) 2>/dev/null
renice -n 19 $(pgrep android.process.media) 2>/dev/null

for class in $list; do
	if [ `pidof $class` ]; then
	  launcher=`pidof $class`;
	  ctl /proc/$launcher/oom_adj -17
	  renice -n -18 $launcher 2>/dev/null
	fi
done

#Optimizing and defragging database files 4-0

sq=/data/adb/modules/butterlimitsforop7poos11uni/system/xbin/sqlite3
zipal=/data/adb/modules/butterlimitsforop7poos11uni/system/xbin/zipalign

#am start -a android.intent.action.MAIN -e toasttext "Optimizing Database" -n mkadp.toast/.MainActivity

for i in $(find /data -iname *.db); do
	$sq $i 'VACUUM;'
	$sq $i 'REINDEX;'
done

for i in \
`find /data -iname "*.db"`; 
do \
	$sq $i 'VACUUM;'; 
	$sq $i 'REINDEX;'; 
done;

ZIPALIGNDB=/data/zipalign.db

if [ ! -f $ZIPALIGNDB ]; then
	touch $ZIPALIGNDB
fi

#kmsg2 $(date)
#kmsg2 "Done"
#kmsg2 "Another heavy works started..."
#kmsg2 "----"
#Zip4-0
#kmsg $(date)
#kmsg "Starting Auto ZipAlign" 

#kmsg2 "Starting Auto ZipAlign" 
#kmsg2 "=========="

#am start -a android.intent.action.MAIN -e toasttext "Starting Zipaligning..." -n mkadp.toast/.MainActivity

ZIPALIGNDB=/data/zipalign.db

if [ ! -f $ZIPALIGNDB ]; then
	touch $ZIPALIGNDB
fi

for DIR in /data/app /system/app /system/priv-app /system/system_ext/app /system/system_ext/priv-app
do
	cd $DIR;
	for APK in *.apk */*.apk
	do
		if [ $APK -ot $ZIPALIGNDB ] && [ $(grep "$DIR/$APK" $ZIPALIGNDB|wc -l) -gt 0 ]; then
			kmsg2 "Already checked: $DIR/$APK" 
		else
			ZIPCHECK=`$zipal -c -v 4 $APK | grep FAILED | wc -l`
			if [ $ZIPCHECK == "1" ]; then
				kmsg2 "Now aligning: $DIR/$APK" 
				$zipal -f 4 $APK /data/local/$APK
				rc = "$?"
				if [ $rc -eq 0 ]; then
					if [ -e "/data/local/$APK" ]; then
						cp -f -p "/data/local/$APK" "$APK" 
						rm -f "/data/local/$APK";
						grep "$DIR/$APK" $ZIPALIGNDB > /dev/null || echo $DIR/$APK >> $ZIPALIGNDB
					else
						kmsg2 "ZipAligning $APK Failed (no output file)"  
					fi
				else
					[ -f "/data/local/$APK" ] && rm -f "/data/local/$APK"
					kmsg2 "ZipAligning $APK Failed (rc: $rc)"  
				fi
			else
				kmsg2 "Already aligned: $DIR/$APK" ;
				grep "$DIR/$APK" $ZIPALIGNDB > /dev/null || echo $DIR/$APK >> $ZIPALIGNDB
			fi
		fi
	done
done

touch $ZIPALIGNDB

#am start -a android.intent.action.MAIN -e toasttext "Zipaligning Done" -n mkadp.toast/.MainActivity

#kmsg2 $(date)
#kmsg2 "=========="
#kmsg2 "Done Auto ZipAlign" 
#kmsg2 "=========="

#kmsg2 "Many heavy works done..."
#kmsg2 "Let me breathe..."
#kmsg2 "----"

#kmsg $(date) 
#kmsg "Some shits will be removed"
#kmsg "----"

#kmsg2 $(date)
#kmsg2 "Some shits will be removed"
#kmsg2 "----"

#am start -a android.intent.action.MAIN -e toasttext "Removing some Shits" -n mkadp.toast/.MainActivity

# This shit shouled be cleaned
rm -Rf /cache/*.apk;
rm -f /data/*.log;
rm -f /data/*.txt;
rm -f /data/anr/*;
rm -f /data/backup/pending/*.tmp;
rm -f /data/cache/*.*;
rm -f /data/data/*.log;
rm -f /data/data/*.txt;
rm -f /data/log/*.log;
rm -f /data/log/*.txt;
rm -f /data/local/*.apk;
rm -f /data/local/*.log;
rm -f /data/local/*.txt;
rm -f /data/local/tmp/*;
rm -f /data/last_alog/*.log;
rm -f /data/last_alog/*.txt;
rm -f /data/last_kmsg/*.log;
rm -f /data/last_kmsg/*.txt;
rm -f /data/mlog/*;
rm -f /data/system/*.log;
rm -f /data/system/*.txt;
rm -f /data/system/dropbox/*;
rm -Rf /data/system/usagestats/*;
rm -f /data/system/shared_prefs/*;
rm -f /data/tombstones/*;
rm -Rf /data/media/0/LOST.DIR;

#kmsg $(date) 
#kmsg "Some shits are removed"
#kmsg "----"
#kmsg2 $(date) 
#kmsg2 "Done"
#kmsg2 "----"

#kmsg $(date) 
#kmsg "fsrtim"
#kmsg "----"

#kmsg2 "Let's do some fstrim tweak..."
#kmsg2 "----"

#am start -a android.intent.action.MAIN -e toasttext "Applying some Xtra Tweaks..." -n mkadp.toast/.MainActivity

fst=/data/adb/modules/butterlimitsforop7poos11uni/system/xbin/fstrim

$fst -v /data;
$fst -v /system;
$fst -v /cache;
$fst -v /vendor;
$fst -v /product;

#kmsg $(date) 
#kmsg "fstrim done"
#kmsg "----"

#
#kmsg $(date) 
#kmsg "Disabling ZRAM"
#kmsg "----"
#
#kmsg2 $(date) 
#kmsg2 "Disabling ZRAM"
#kmsg2 "----"
#
swapoff /dev/zram0
swapoff /dev/block/zram0
swapoff /dev/block/vnswap0
ctl /sys/block/zram0/reset 1
ctl /sys/block/zram0/disksize 0
ctl /sys/block/vnswap0/reset 1
ctl /sys/block/vnswap0/disksize 0
ctl /proc/sys/vm/swappiness 0
#
#kmsg $(date) 
#kmsg "ZRAM Disabled"
#kmsg "----"
#
#kmsg2 $(date) 
#kmsg2 "ZRAM Disable"
#kmsg2 "----"
#

#kmsg2 $(date) 
#kmsg2 "All Done."
#kmsg2 "Enjoy ButterLimits"
#kmsg2 "----"


# Push a semi-needed log to the internal storage with a "report" if the script could be executed or not;
kmsg $(date) 
kmsg "MKADP HAS EXECUTED TASK SUCCESSFULLY. ENJOY!" 

#kmsg3 $(date) 
#kmsg3 "ButterLimits Enabled"
#kmsg3 "----"

$BB cp -rf /data/media/0/YourBLchanges.log /data/data/com.mkadp.blapptwo/files/YourBLchanges.log

#am start -a android.intent.action.MAIN -e toasttext "Wiping Cache" -n mkadp.toast/.MainActivity

#$BB rm -rf /cache/*	
#$BB rm -rf /data/dalvik-cache/*

dumpsys deviceidle enable all;
dumpsys deviceidle enabled all;
dumpsys deviceidle enable;
dumpsys deviceidle enabled;
dumpsys deviceidle force-idle
settings put global aggressive_idle_enabled "1"
settings put global aggressive_standby_enabled "1"

#am start -a android.intent.action.MAIN -e toasttext "All Done. Thankyou for your patience" -n mkadp.toast/.MainActivity
#am start -n com.mkadp.blapptwo/.activities.LogsActivity
exit 0
